(import 'list)

(defmcr (when cond body)
  "Evaluate BODY if COND is true."
  (if (eval cond)
    (eval body) '()))

(defmcr (unless cond body)
  "Evaluate BODY if COND is false."
  (if (eval cond)
    '() (eval body)))

(defproc (or lhs rhs)
  "Check if LHS or RHS is true."
  (+ lhs rhs))

(defproc (and lhs rhs)
  "Check if LHS and RHS are true."
  (* lhs rhs))

(defproc (not val)
  "Check if VAL is false."
  (eq? 0 val))

(defproc (< first & args)
  "Iterate through args, checking if the
current value is less than the next value."
  (apply lt?
    (join (list first) args)))

(defproc (> first & rest)
  "Iterate through args, checking if the
current value is greater than the next value."
  (apply gt?
    (join (list first) args)))

(defproc (>= first & rest)
  "Iterate through args, checking if the
current value is greater or equal to the
next value."
  (or (= 0 (len rest))
      (not (> first (head rest)))
      (not (= first (head rest)))
      (= 1 (len rest))
      (>= (head rest) (tail rest))))

(defproc (<= lhs rhs)
  "Check if LHS is lesser or equal to RHS"
  (or (< lhs rhs)
      (eq? lhs rhs)))

